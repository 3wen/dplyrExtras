% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modify.R
\name{modify}
\alias{modify}
\title{In place modification of data tables}
\usage{
modify(.dt, .if, .by = NULL, ..., .envir = parent.frame(),
  .inplace = is.data.table(.dt), .as.data.table = is.data.table(.dt))
}
\arguments{
\item{.dt}{a data.table}

\item{.if}{optional a boolean conditions that specifies the rows that shall be modifed}

\item{.by}{optional a vector of column names used for computations that are splitted by groups}

\item{...}{formulas for columns that are modified or newly created}

\item{.envir}{optional an environment in which the expressions shall be evaluated if variables are not found in .dt}

\item{.inplace}{allows .dt inplace modification (TRUE if .dt is a data table)}

\item{.as.data.table}{shall result be a data.table (only true if .dt is a data.table)}
}
\description{
If dt is a data table, then modify is essentially just a wrapper for data.table syntax that allows modification or creation of new columns. If dt is not a data table, it will by default be converted to a data table and then transformed and returned as the original data frame. Unlike mutate from dplyr, one can use the .SD argument in function calls, which can quite useful sometimes.
}

\examples{\dontrun{
  library(microbenchmark)

  K = 3
  n = 10
  dt = data.table(a= sample(1:3,n,replace=TRUE),
                   b= sample(1:100,n,replace=TRUE),
                   x=rnorm(n))
  df = as.data.frame(dt)
  # Set x to 100 where a==2
  modify(dt,a==2, y=x+100, z=y+K)
  
  modify(df,a==2,y=200,z=y*5+K)
  
  dt[,y:=x+2]
  
  # Set x to the mean value of b*100 in each group of a
  modify(dt,.by=c("a"), x=mean(b)*100)
  dt
  # Call with strings
  com = "x=200"
  s_modify(dt,"a==2", com)
  dt

 
}}
